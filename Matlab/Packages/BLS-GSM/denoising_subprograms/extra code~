
%[l,h]= size(im0);

%calculating psnr
%peaksnr = psnr(im0,im);


%dwt transform
%first vectorise
%im01 = im0(:);

%now apply wavelet transform
%[cA,cD] = dwt(im01,'sym4');

%cA and cD are the low and high pass filters
%X = idwt(cA,cD,'sym4');

%reshape
%x = reshape(X,[l,h]);
%x = uint8(x);
%figure,imshow(x);

%to view individual components cA and cD, need to upsample
%ca = upsample(cA,2);
% add 2-1 zeroes intermediately
% might have to delete some values
%then reshape and display
%ca = ca(1:l*h);
%y_new = reshape(ca,[l,h]);
%figure,imshow(uint8(y_new));





















% for i = 1:patchsize:h-patchsize+1
%     for j = 1:patchsize:l-patchsize+1
%         h_end = i+patchsize-1;
%         l_end = j+patchsize-1;
%         patch = paddedim(i:h_end , j:l_end);
%         covtemp = cov(patch);
%         Cov_k(:, :, covcount+1) = covtemp ;
%         covcount = covcount + 1;
%         if covcount == k
%             break
%         end
%     end
%     if covcount == k
%         break
%     end
% end   














%     for i = 1:m
%         for j = 1:k
%             for q = 1:numz
%                 p_ym_k_z(i,j,q) = gaussian_dist( patchmatrix(1:patchlen,i), zi(q)*Cov_k(:,:,j)+ C_w, numel(Cov_k(:,:,j)));
%             end
%             squeezed_array = p_ym_k_z(i,j,:);
%             squeezed_array = squeezed_array(:,:);
%             p_ym_k(i,j) = sum(times( squeezed_array, p_z));
%         end
%         p_ym(i) = prob_y( p_ym_k( i, :), P_k_n);
%     end















%     for i = 1:numz
%         for j = 1:k
%             intermediate(i,j) = sum( times( p_ym_k_z(:,j,i), p_ym));
%         end
%     end
%     p_z_k_n1 = times (p_z_k_n, intermediate)./m;
%     p_z_k_n1 = bsxfun(@rdivide, p_z_k_n1, P_k_n1);






% for i = 1:k
%     if mod(i,2)==0
%         Cov_k(:,:,i) = temp;
%     else
%         Cov_k(:,:,i) = temp';
%     end
% end







% for i = 1:patchsize:(h-patchsize+1)
%     for j = 1:patchsize:(l-patchsize+1)
%         
%         h_end = i+patchsize-1;
%         l_end = j+patchsize-1;
%         patch = paddedim(j:l_end , i:h_end);
%         patch = reshape(patch,[],1);
%         patchmatrix = [ patchmatrix patch];
%     end
% end